buildscript {
    apply from: project.rootProject.relativePath('buildscript.gradle'), to: buildscript
}

defaultTasks 'createOsgiContainer'

apply plugin: 'neva.osgi-container'

allprojects {
    group 'com.neva.javarel'
    version "1.0.0.ALPHA"

    apply plugin: 'idea'
    apply plugin: 'base'

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }
}

ext {
    javarelVersion = '1.0.0.ALPHA'
}

dependencies {
    osgiMain 'org.apache.felix:org.apache.felix.main:5.4.0'

    osgiBundle 'org.apache.felix:org.apache.felix.fileinstall:3.4.2'
    osgiBundle 'org.apache.felix:org.apache.felix.configadmin:1.8.8'
    osgiBundle 'org.apache.felix:org.apache.felix.eventadmin:1.4.6'
    osgiBundle 'org.apache.felix:org.apache.felix.metatype:1.1.2'
    osgiBundle 'org.apache.felix:org.apache.felix.webconsole:4.2.14'
    osgiBundle 'org.ops4j.pax.logging:pax-logging-service:1.8.5'
    osgiBundle 'org.glassfish.grizzly.osgi:grizzly-httpservice-bundle:2.3.24'

    osgiModule project(':app:core')
    osgiModule project(':app:adm')
}

osgiContainer {
    felix()
    debug()
    later(["javarel-*", "quickstart-*"])
    javaArg('-Dderby.system.home=db')
    exclude([
            'slf4j-api-1.7.7*',
            'xml-apis-1.3*',
            'antlr',
            'animal-sniffer-annotations',
            'grizzly-httpservice-bundle*',
            'kxml2',
            'xmlpull',
    ])
}

subprojects { subProject ->

    plugins.withId 'kotlin', {
        // testCompile group: 'junit', name: 'junit', version: '4.11'

        jar.archiveName = "quickstart-${subProject.name}-${subProject.version}.jar"
        sourceCompatibility = 1.7
        targetCompatibility = 1.7

        def compileOptions = {
            options.encoding = "UTF-8"
        }

        compileJava compileOptions
        compileTestJava compileOptions
    }

    plugins.withId 'neva.osgi-module', {
        jar {
            manifest {
                name subProject.description
                instruction 'Bundle-Category', 'quickstart'
            }
        }

        dependencies {
            osgiBundle 'org.jetbrains.kotlin:kotlin-osgi-bundle:1.0.2'

            osgiBundle 'org.osgi:org.osgi.enterprise:5.0.0'
            osgiBundle 'org.osgi:org.osgi.core:5.0.0'

            osgiBundle 'org.apache.felix:org.apache.felix.scr:2.0.2'
            compile 'org.apache.felix:org.apache.felix.scr.annotations:1.9.12'

            osgiBundle 'javax.servlet:javax.servlet-api:3.0.1'
            osgiBundle 'com.google.guava:guava:19.0'
            osgiBundle 'com.google.code.gson:gson:2.6.2'
            osgiBundle 'commons-io:commons-io:2.4'
            osgiBundle 'commons-fileupload:commons-fileupload:1.3.1'
            osgiBundle 'org.json:json:20160212'
            osgiBundle 'org.apache.commons:commons-lang3:3.4'
            osgiBundle 'org.slf4j:slf4j-api:1.7.6'
            osgiBundle 'org.slf4j:slf4j-log4j12:1.7.6'

            osgiBundle "com.neva.javarel:javarel-foundation:$javarelVersion"
            osgiBundle "com.neva.javarel:javarel-resource:$javarelVersion"
            osgiBundle "com.neva.javarel:javarel-communication-rest:$javarelVersion"
            osgiBundle "com.neva.javarel:javarel-presentation-asset:$javarelVersion"
            osgiBundle "com.neva.javarel:javarel-presentation-view:$javarelVersion"
            osgiBundle "com.neva.javarel:javarel-presentation-view-pebble:$javarelVersion"
            osgiBundle "com.neva.javarel:javarel-storage:$javarelVersion"
            osgiBundle "com.neva.javarel:javarel-processing-scheduler:$javarelVersion"
            osgiBundle "com.neva.javarel:javarel-security-auth:$javarelVersion"
        }
    }
}